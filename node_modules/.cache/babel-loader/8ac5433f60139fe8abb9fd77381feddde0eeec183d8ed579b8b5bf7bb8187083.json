{"ast":null,"code":"import ApiService from '../apiservice';\nimport ValidationError from '../exception/ValidationError';\nclass UserService extends ApiService {\n  constructor() {\n    super('/api/user');\n  }\n  authenticate(credentials) {\n    return this.post('/authenticate', credentials);\n  }\n  getUserBalance(id) {\n    return this.get('/balance/${id}');\n  }\n  save(user) {\n    return this.post('', user);\n  }\n  validate(user) {\n    const error = [];\n    if (!user.name) {\n      error.push('The name field is required.');\n    }\n    if (!user.email) {\n      error.push('The email field is required.');\n    } else if (!user.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)) {\n      error.push('Please provide a valid Email.');\n    }\n    if (!user.password || !user.passwordRepeat) {\n      error.push('Enter password 2x.');\n    } else if (user.password !== user.passwordRepeat) {\n      error.push('Enter password 2x.');\n    }\n    if (error && error.length > 0) {\n      throw new ValidationError(error);\n    }\n  }\n}\nexport default UserService;","map":{"version":3,"names":["ApiService","ValidationError","UserService","constructor","authenticate","credentials","post","getUserBalance","id","get","save","user","validate","error","name","push","email","match","password","passwordRepeat","length"],"sources":["/home/ket/Documentos/JAVA/MyFinancesFront/my-finances-app/src/app/service/userService.js"],"sourcesContent":["import ApiService from '../apiservice'\n\nimport ValidationError from '../exception/ValidationError'\n\nclass UserService extends ApiService {\n\n    constructor(){\n        super('/api/user')\n    }\n\n    authenticate(credentials){\n        return this.post('/authenticate', credentials)\n    }\n\n    getUserBalance(id){\n        return this.get('/balance/${id}');\n    }\n\n    save(user){\n        return this.post('', user);\n    }\n\n    validate(user){\n        const error = []\n\n        if(!user.name){\n            error.push('The name field is required.')\n        }\n\n        if(!user.email){\n            error.push('The email field is required.')\n        }else if( !user.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/) ){\n            error.push('Please provide a valid Email.')\n        }\n\n        if(!user.password || !user.passwordRepeat){\n            error.push('Enter password 2x.')\n        }else if( user.password !== user.passwordRepeat ){\n            error.push('Enter password 2x.')\n        }    \n\n        if(error && error.length > 0){\n            throw new ValidationError(error);\n        }\n    }\n\n}\n\nexport default UserService;"],"mappings":"AAAA,OAAOA,UAAU,MAAM,eAAe;AAEtC,OAAOC,eAAe,MAAM,8BAA8B;AAE1D,MAAMC,WAAW,SAASF,UAAU,CAAC;EAEjCG,WAAW,GAAE;IACT,KAAK,CAAC,WAAW,CAAC;EACtB;EAEAC,YAAY,CAACC,WAAW,EAAC;IACrB,OAAO,IAAI,CAACC,IAAI,CAAC,eAAe,EAAED,WAAW,CAAC;EAClD;EAEAE,cAAc,CAACC,EAAE,EAAC;IACd,OAAO,IAAI,CAACC,GAAG,CAAC,gBAAgB,CAAC;EACrC;EAEAC,IAAI,CAACC,IAAI,EAAC;IACN,OAAO,IAAI,CAACL,IAAI,CAAC,EAAE,EAAEK,IAAI,CAAC;EAC9B;EAEAC,QAAQ,CAACD,IAAI,EAAC;IACV,MAAME,KAAK,GAAG,EAAE;IAEhB,IAAG,CAACF,IAAI,CAACG,IAAI,EAAC;MACVD,KAAK,CAACE,IAAI,CAAC,6BAA6B,CAAC;IAC7C;IAEA,IAAG,CAACJ,IAAI,CAACK,KAAK,EAAC;MACXH,KAAK,CAACE,IAAI,CAAC,8BAA8B,CAAC;IAC9C,CAAC,MAAK,IAAI,CAACJ,IAAI,CAACK,KAAK,CAACC,KAAK,CAAC,8BAA8B,CAAC,EAAE;MACzDJ,KAAK,CAACE,IAAI,CAAC,+BAA+B,CAAC;IAC/C;IAEA,IAAG,CAACJ,IAAI,CAACO,QAAQ,IAAI,CAACP,IAAI,CAACQ,cAAc,EAAC;MACtCN,KAAK,CAACE,IAAI,CAAC,oBAAoB,CAAC;IACpC,CAAC,MAAK,IAAIJ,IAAI,CAACO,QAAQ,KAAKP,IAAI,CAACQ,cAAc,EAAE;MAC7CN,KAAK,CAACE,IAAI,CAAC,oBAAoB,CAAC;IACpC;IAEA,IAAGF,KAAK,IAAIA,KAAK,CAACO,MAAM,GAAG,CAAC,EAAC;MACzB,MAAM,IAAInB,eAAe,CAACY,KAAK,CAAC;IACpC;EACJ;AAEJ;AAEA,eAAeX,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}